# ===== CORE SETTINGS =====
spring.application.name=PGBuddy
# run server on port 8081 instead of default port 8080
# -> changed in prod
server.address=0.0.0.0
# 8081 is default if PORT not set
server.port=${PORT:8080}

# ===== DEVTOOLS (DISABLE IN PROD) =====
spring.devtools.restart.enabled=false
# disable auto DB setup
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

# ===== DATABASE =====
#spring.datasource.url=jdbc:mysql://${MYSQLHOST}:${MYSQLPORT}/${MYSQLDATABASE}?useSSL=false&allowPublicKeyRetrieval=true
#spring.datasource.username=${MYSQLUSER}
#spring.datasource.password=${MYSQLPASSWORD}
spring.datasource.url=jdbc:mysql://shuttle.proxy.rlwy.net:30967/railway?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=iOQUrgRwkuPAjXJCimxefjcklErcUgmT

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true
# shows us all the SQL queries which our application is currently running
spring.jpa.show-sql=true
# for testing
spring.sql.init.mode=never
# script based initialisation - always run the SQL queries when starting the application
#spring.sql.init.mode=always

# Speed up JPA
#spring.data.jpa.repositories.bootstrap-mode=lazy
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# ===== PERFORMANCE =====
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.connection-timeout=30000

# ===== SECURITY =====
# adding spring-securtiy will reject all HTTPS requests & enables basic authentication for all endpoints  by default - if no custom security configuration is provided
# we use the below configs to allow the HTTPS requests
# disables basic authentication in Spring Security's default configuration:
security.basic.enable: false
# ignore all requests (/**) and not apply any security filters to them -> disables Spring Security for all endpoints in the application
security.ignore:/**

# ===== API DOCS =====
# Enable Swagger
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

# ===== MONITORING =====
# Expose all endpoints (be careful in production)
management.endpoints.web.exposure.include=*
# Or selectively expose endpoints
#management.endpoints.web.exposure.include=health,info,metrics,env,prometheus
# Change base path if needed
management.endpoints.web.base-path=/actuator
#management.endpoints.web.base-path=/manage
# Enable specific metrics
management.metrics.enable.jvm=true
management.metrics.enable.system=true
# Disable security for actuator endpoints (NOT recommended for production)
#management.security.enabled=false

# ===== LOGGING =====
# Enable Debug Logging
#logging.level.org.springframework=DEBUG
#-logging.level.org.springframework.web.socket=DEBUG
#-logging.level.org.springframework.messaging=DEBUG
# application.properties
#-logging.level.root=INFO
#-logging.level.com.example.pgbuddy=DEBUG

# ===== OTHERS =====
# configure a common prefix for all your REST controllers in Spring Boot
# spring.data.rest.basePath=/api

# Auto-generate swagger.json at startup
#springdoc.api-docs.groups.enabled=true
#springdoc.swagger-ui.url=/v3/api-docs
# New in springdoc v1.7.0+
#springdoc.write-docs-to-file=true
# Live reload for Swagger (dev only)
#springdoc.cache.disabled=true
#springdoc.writer.with-result-handler=file
#springdoc.writer.file.path=./swagger.json
